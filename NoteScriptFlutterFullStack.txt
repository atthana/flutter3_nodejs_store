================================
üõ¥üõ¥ Flutter 3 Full Stack Workshop  üõ¥üõ¥
================================
‚úà DAY 1
1.‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°
2.‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• MySQL ‡∏ú‡πà‡∏≤‡∏ô API
3.‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û‡∏ú‡πà‡∏≤‡∏ô API (Node JS)
-------------------------------------------------------
üõ†1. ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°
üíª Java
---
java -version
where java
set JAVA_HOME

üíª Android SK
---
android
where android

üíª Node JS
---
node -v
npm -v
npx -v
where node

üíª Git
---
git version
where git

üíª Flutter SDK
---
flutter --version
flutter doctor
where flutter

üöÄ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô Flutter
---
Step 1: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏≠‡∏ö‡∏£‡∏°‡∏ô‡∏µ‡πâ
----
mkdir Flutter3FullStack

Step 2: ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á
----
flutter create --org  com.itgenius flutter_node_store

Step 2: ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ô VSCode
---
code flutter_node_store -r

Step 3: ‡∏£‡∏±‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå

üîå 2.‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• MySQL ‡∏ú‡πà‡∏≤‡∏ô API

Step 1: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏ä‡∏∑‡πà‡∏≠ ‚Äúflutterstore‚Äù
---
CREATE DATABASE flutterstore
    DEFAULT CHARACTER SET = 'utf8mb4';

Step 2: Clone Project from and Install node dependencies
---
git clone https://github.com/iamsamitdev/serverapi_ts serverapi

Step 3: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠ .env_example ‡πÄ‡∏õ‡πá‡∏ô .env ‡πÅ‡∏•‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ
---
DB_HOST=127.0.0.1
DB_USER=root
DB_PASSWORD=123456
DB_PORT=3306
DB_DATABASE=flutterstore
ENV=development
PORT=3000
JWT_SECRET=itgenius@2023secret

Step 4: ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Library
---
npm install

Step 5: ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á migrate ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 
---
npx knex migrate:latest
npm run knex:migrate:latest

Step 6: ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á seed ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
---
npx knex seed:run

Step 7: ‡∏£‡∏±‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå Node.JS Express
---
npm start

Step 8: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API Register
---
http://localhost:3000/api/auth/register

Method : Post
Body: Json
{
  "firstname":"Samit",
  "lastname":"Koyom",
  "email":"samit@email.com",
  "password":"123456"
}

Step 9: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API Login
---
http://localhost:3000/api/auth/login

Body: Json
{
  "email":"samit@email.com",
  "password":"123456"
}

Step 10: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API List Products
---
http://localhost:3000/api/products
Method: Get
Auth: Bearer Token

Step 11: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API List Products by id
---
http://localhost:3000/api/products/3
Method: Get
Auth: Bearer Token

üîå 3.‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û‡∏ú‡πà‡∏≤‡∏ô API (Node JS)

Step 12: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API Create Product
---
http://localhost:3000/api/products

Method : Post
Auth: Bearer Token
Body: Form

Field name	value
----------------------------------------------------
name		test some product
description	lorem ipsonefa
barcode		845964464485
stock		10
price		29500
category_id	1
user_id		1
status_id		1

Files
---------------------------------------------------
photo		example.jpg

Step 13: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API Edit Product
---
http://localhost:3000/api/products/18

Method : Put
Auth: Bearer Token
Body: Json
{
  "name":"test some product update",
  "description":"lorem ipsonefa update",
  "barcode":"845964464485",
  "stock":11,
  "price":39500,
  "category_id":1,
  "user_id":1,
  "status_id":1
}

Step 14: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API Delete Product
---
http://localhost:3000/api/products/18

Method : Delete
Auth: Bearer Token



